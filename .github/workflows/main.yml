
# This is a basic workflow to help you get started with the Run C/C++test action for Make-based project.
name: C/C++test with Make

on:
  # Triggers the workflow on at push in future branches
  push:
    branches-ignore:
      - main
      - hotfix
      - release
      - develop
      
  # Triggers the workflow on at a fixed time.
  schedule:
    - cron: '0 20 * * 1-5'

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  run-cpptest-make:
    name: Analyze project with C/C++test

    # Specifies the type of runner that the job will run on.
    runs-on: self-hosted

    # Specifies required permissions for upload-sarif action
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    - name: Check current branch
      run: echo "Current branch is ${{ github.ref }}."
          
    # Set a PATH in this environment.
    - name: Set a path
      run: echo "/home/godagoda/opt/app/cpptest_2023:/home/godagoda/opt/app/cpptest_2023/bin" >> $GITHUB_PATH
      
    # Del workspace
    - name: Del workspace
      run: rm -rf ../workspace

    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Builds your Make project using 'cpptesttrace' to collect input data for code analysis.
    # Be sure 'cpptesttrace' is available on $PATH.
    - name: Build project
      run: cpptesttrace make clean all
      working-directory: ./sampleproduct
      
    # Runs code analysis with C/C++test.
    - name: Run C/C++test for modern
      if:  github.ref != 'refs/heads/develop'
      uses: parasoft/run-cpptest-action@2.0.1
      with:
        # C/C++test will use options from 'config.properties'.
        additionalParams: -localsettings config.properties
        testConfig: 'c++test.dtp://MISRA C 2023_modern'
        reportFormat: xml,html,sarif
        input: './sampleproduct/cpptestscan.bdf'
        reportDir: report-modern
        commandLinePattern: '${cpptestcli} -data ../workspace -resource sampleproduct -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams} -showdetails -publish'

    # Runs code analysis with C/C++test.
    - name: Run C/C++test for legacy
      if:  github.ref != 'refs/heads/develop'
      uses: parasoft/run-cpptest-action@2.0.1
      with:
        # C/C++test will use options from 'config.properties'.
        additionalParams: -localsettings config.properties
        testConfig: 'c++test.dtp://MISRA C 2023_legacy'
        reportFormat: xml,html,sarif
        input: './sampleproduct/cpptestscan.bdf'
        reportDir: report-legacy
        commandLinePattern: '${cpptestcli} -data ../workspace -resource sampleproduct -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams} -showdetails -publish'

    # Runs code analysis with C/C++test.
    - name: Run C/C++test for flowanalysis
      if:  github.ref == 'refs/heads/develop'
      uses: parasoft/run-cpptest-action@2.0.1
      with:
        # C/C++test will use options from 'config.properties'.
        additionalParams: -localsettings config.properties
        testConfig: 'c++test.dtp://MISRA C 2023_flowanalysis'
        reportFormat: xml,html,sarif
        input: './sampleproduct/cpptestscan.bdf'
        reportDir: report-flowanalysis
        commandLinePattern: '${cpptestcli} -data ../workspace -resource sampleproduct -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams} -showdetails -publish'

    # Rename and copy files
    - name: Create report dir
      if:  github.ref != 'refs/heads/develop'
      run: mkdir sarif-output
      
    # Rename and copy files
    - name: Rename and copy file
      if:  github.ref != 'refs/heads/develop'
      run: |
        mv report-modern/report.sarif sarif-output/report-modern.sarif
        mv report-legacy/report.sarif sarif-output/report-legacy.sarif
    
    # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if:  github.ref != 'refs/heads/develop'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: sarif-output
        
        # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF) flowanalysis
      if:  github.ref == 'refs/heads/develop'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: report-flowanalysis/report.sarif

    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if:  github.ref != 'refs/heads/develop'
      uses: actions/upload-artifact@v3
      with:
        name: CpptestReports
        path: |
          report-modern/*.*
          report-legacy/*.*

    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports flowanalysis
      if:  github.ref == 'refs/heads/develop'
      uses: actions/upload-artifact@v3
      with:
        name: CpptestReports-flowanalysis
        path: report-flowanalysis/*.*
